{"version":3,"sources":["hat.png","App.js","reportWebVitals.js","index.js"],"names":["App","counterRef","useRef","canvasRef","useState","localUrl","setLocalUrl","className","ref","accept","onChange","file","current","files","URL","createObjectURL","ctx","getContext","img1","Image","src","setAttribute","onload","drawImage","img2","error","console","log","type","onClick","href","toDataURL","a","document","createElement","download","dispatchEvent","MouseEvent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4NAAe,I,MC8DAA,EA3DH,WACV,IAAMC,EAAaC,mBACbC,EAAYD,mBAClB,EAAgCE,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KA+BA,OACE,8BACE,sBAAKC,UAAU,UAAf,UACE,qBAAKA,UAAU,WACf,qBAAKA,UAAU,MAAf,SAME,wBAAQC,IAAKL,MAEf,sBAAKI,UAAU,WAAf,UACE,uBAAOC,IAAKP,EAAYQ,OAAO,WAAWC,SA3C9B,WAClB,IACE,IAAMC,EAAOV,EAAWW,QAAQC,MAAM,GAChCR,EAAWS,IAAIC,gBAAgBJ,GACrCL,EAAYD,GACZ,IAAMW,EAAMb,EAAUS,QAAQK,WAAW,MACnCC,EAAO,IAAIC,MACjBD,EAAKE,IAAMf,EACXa,EAAKG,aAAa,cAAe,aACjCH,EAAKI,OAAS,WACZN,EAAIO,UAAUL,EAAM,EAAG,EAAG,IAAK,KAC/B,IAAMM,EAAO,IAAIL,MACjBK,EAAKH,aAAa,cAAe,aACjCG,EAAKJ,IAAM,uDACXI,EAAKF,OAAS,WACZN,EAAIO,UAAUC,EAAM,EAAG,EAAG,IAAK,OAGnC,MAAOC,GACPC,QAAQC,IAAIF,KAwByDG,KAAK,SAEpEvB,EACE,wBAAQwB,QAvBH,WACf,IAAMC,EAAO3B,EAAUS,QAAQmB,YACzBC,EAAIC,SAASC,cAAc,KACjCF,EAAEG,SAAW,WACbH,EAAEF,KAAOA,EACTE,EAAEI,cAAc,IAAIC,WAAW,WAkBrB,0BAA0C,cCzCzCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhB,SAASiB,eAAe,SAM1BZ,K","file":"static/js/main.be88f538.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hat.074bc9ba.png\";","import React, { useRef, useState } from 'react'\nimport './App.css'\nimport './hat.png'\nconst App = () => {\n  const counterRef = useRef()\n  const canvasRef = useRef()\n  const [localUrl, setLocalUrl] = useState(null)\n  const handleClick = () => {\n    try {\n      const file = counterRef.current.files[0]\n      const localUrl = URL.createObjectURL(file)\n      setLocalUrl(localUrl);\n      const ctx = canvasRef.current.getContext('2d')\n      const img1 = new Image()\n      img1.src = localUrl;\n      img1.setAttribute(\"crossOrigin\", 'Anonymous')\n      img1.onload = () => {\n        ctx.drawImage(img1, 0, 0, 160, 160)\n        const img2 = new Image()\n        img2.setAttribute(\"crossOrigin\", 'Anonymous')\n        img2.src = \"https://s3.bmp.ovh/imgs/2021/10/45eb7d8b67d8f1e6.png\"\n        img2.onload = () => {\n          ctx.drawImage(img2, 0, 0, 160, 160)\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n  const download = () => {\n    const href = canvasRef.current.toDataURL()\n    const a = document.createElement('a')\n    a.download = 'download'\n    a.href = href\n    a.dispatchEvent(new MouseEvent('click'))\n  }\n  return (\n    <div>\n      <div className=\"content\" >\n        <div className=\"header\" ></div>\n        <div className=\"box\" >\n          {/* {\n            localUrl? \n            // eslint-disable-next-line jsx-a11y/alt-text\n            <div><img src={localUrl} /> <img className=\"bck\" src=\"http://www.qingyin8.com/gq2/img/hat0.png\" /></div>: null\n          } */}\n          <canvas ref={canvasRef} ></canvas>\n        </div>\n        <div className=\"download\" >\n          <input ref={counterRef} accept=\"image/**\" onChange={handleClick} type=\"file\" />\n          {\n            localUrl ?\n              <button onClick={download} >下载</button> : null\n          }\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}